install.packages("e1071")
install.packages("pROC")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/SVM.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/SVM.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/SVM.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/SVM.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/SVM.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/RandomForest.R')
install.packages("randomForest")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/RandomForest.R')
install.packages("pROC")
library(randomForest)
library(pROC)
trainDF<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Train80p.csv")
testDF<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Test20p.csv")
trainDF$class<-as.factor(trainDF$class)
testDF$class<-as.factor(testDF$class)
bestmtry<-tuneRF(trainDF,as.factor(trainDF$class),ntreeTry = 100,stepFactor = 1.2,
improve = 0.01,trace = TRUE,plot = TRUE, doBest=TRUE)
modelRandom<-randomForest(class~.,data = trainDF,mtry=bestmtry$mtry,ntree=bestmtry$ntree)
PredictionsWithClass<- predict(modelRandom, testDF[,1:10], type = 'class')
cm<-table(predictions=PredictionsWithClass, actual=testDF$class)
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/RandomForest.R')
install.packages("rpart")
install.packages("rpart.plot")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/DT.R')
install.packages("caret")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/KNN.R')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/KNN.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/LOG_REG.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/LOG_REG.R')
rm(list=ls())
library(pROC)
training<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Train80p.csv")
testing<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Test20p.csv")
library(caret)
# logit <- glm(target ~ cp+ca+thal, family='binomial', data=training)
# print(summary(logit))
#
# testing.probs <-predict(logit, testing[,-4], type='response')
# pred.logit <- rep('0',length(testing.probs))
# pred.logit[testing.probs>=0.5] <- '1'
#
# print(confusionMatrix(factor(pred.logit),factor(testing$target)))
train_control <- trainControl(method = "CV", number = 10)
modelFit<- train(class~.,
method='glm',
preProcess=c('scale', 'center'),
data=training,
family=binomial(link='logit'),
trControl=train_control,
tuneGrid=expand.grid(parameter=c(0.001, 0.01, 0.1, 1,10,100, 1000)))
testing$predict <- predict(modelFit, newdata = testing[,-17])
predict()
testing
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/LOG_REG.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/LOG_REG.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/LOG_REG.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/LOG_REG.R')
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/NB.R')
rm(list=ls())
library(e1071)
library(pROC)
training<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Train80p.csv")
testing<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Test20.csv")
rm(list=ls())
library(e1071)
library(pROC)
training<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Train80p.csv")
testing<-read.csv("G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/Normalized_Dataset_Test20.csv")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/NB.R')
install.packages("neuralnet")
source('G:/Thesis/DataMing+MachieLeaning/Diabetes/ALL/NN.R')
